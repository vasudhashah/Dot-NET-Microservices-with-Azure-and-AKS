services:
  ordersmicroservice.api:
    image: ordersmicroserviceapi
    build:
      context: .
      dockerfile: OrdersMicroservice.API/Dockerfile
    environment:
     - MONGODB_HOST=mongodb-container
     - MONGODB_PORT=27017
     - MONGODB_DATABASE=OrdersDatabase
     - UsersMicroserviceName=users-microservice
     - UsersMicroservicePort=9090
    ports:
     - "7000:8080"
    networks:
     - orders-mongodb-network
     - ecommerce-network
    depends_on:
     - mongodb-container

  mongodb-container:
    image: mongo:latest
    ports:
     - "27017:27017"
    volumes:
     - ../mongodb-init:/docker-entrypoint-initdb.d
    networks:
     - orders-mongodb-network

  products-microservice:
    image: products-microservice:latest
    environment:
     - ASPNETCORE_HTTP_PORTS=8080
     - ASPNETCORE_ENVIRONMENT=Development
     - MYSQL_HOST=mysql-container
     - MYSQL_PORT=3306
     - MYSQL_DATABASE=ecommerceproductsdatabase
     - MYSQL_USER=root
     - MYSQL_PASSWORD=admin
    ports:
    - "6000:8080"
    networks:
    - products-mysql-network
    - ecommerce-network
    depends_on:
    - mysql-container

  users-microservice:
    image: users-microservice:latest
    environment:
    - ASPNETCORE_HTTP_PORTS=8080
    - ASPNETCORE_ENVIRONMENT=Development
    - POSTGRES_HOST=postgres-container
    - POSTGRES_PORT=5432
    - POSTGRES_DATABASE=eCommerceUsers
    - POSTGRES_USER=postgres
    - POSTGRES_PASSWORD=admin
    ports:
    - "5000:9090"
    networks:
    - users-postgres-network
    - ecommerce-network
    depends_on:
    - postgres-container


  mysql-container:
    image: mysql:8.0
    environment:
    - MYSQL_ROOT_PASSWORD=admin
    ports:
    - "3307:3306"
    volumes:
    - ../mysql-init:/docker-entrypoint-initdb.d
    networks:
    - products-mysql-network

  postgres-container:
    image: postgres:13
    environment:
    - POSTGRES_USER=postgres
    - POSTGRES_PASSWORD=admin
    - POSTGRES_DB=eCommerceUsers
    ports:
    - "5433:5432"
    volumes:
    - ../postgres-init:/docker-entrypoint-initdb.d
    networks:
    - users-postgres-network

networks:
  orders-mongodb-network:
    driver: bridge
  products-mysql-network:
    driver: bridge
  users-postgres-network:
    driver: bridge
  ecommerce-network:
    driver: bridge






